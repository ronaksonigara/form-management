{"version":3,"sources":["components/FormItem.js","components/Form.js","components/Input.js","validation.js","components/FormManagement.js","App.js","serviceWorker.js","index.js"],"names":["FormItem","props","children","helperText","itemClassName","classNames","className","child1","child2","validateStatus","wrapperClassName","renderWrapper","renderHelper","defaultProps","Form","otherProps","formClassName","Input","id","label","containerClassName","labelClassName","inputClassName","inputProps","htmlFor","type","validateMobile","custMobile","optional","isValid","errMessage","length","test","validateEmail","custEmail","toLowerCase","validateAge","custAge","FormManagement","data","useState","email","mobile","age","validation","setValidaton","inputValue","setInputValue","isSubmit","setSubmit","handleChange","event","target","name","value","prevState","handleEmailVaidation","handleMobileValidation","handleAgeValidation","onSubmit","preventDefault","optionalAge","indexOf","onChange","onBlur","maxLength","Object","keys","map","item","key","toUpperCase","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d161081c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\n\r\nconst propTypes = {\r\n  children: PropTypes.node,\r\n\r\n  helperText: PropTypes.string,\r\n\r\n  validateStatus: PropTypes.oneOf([\"error\", \"\"])\r\n};\r\n\r\nconst defaultProps = {};\r\n\r\nfunction FormItem(props) {\r\n  const renderWrapper = (child1, child2) => {\r\n    const { validateStatus } = props;\r\n\r\n    let wrapperClassName = classNames(\"form-control\", {\r\n      \"has-error\": validateStatus === \"error\"\r\n    });\r\n\r\n    return (\r\n      <div className={wrapperClassName}>\r\n        {child1}\r\n        {child2}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderHelper = () => {\r\n    const { helperText } = props;\r\n\r\n    if (helperText) {\r\n      return <div className=\"form-item__helper\">{helperText}</div>;\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  const { children, helperText } = props;\r\n\r\n  let itemClassName = classNames(\"form-item\", {\r\n    \"form-item--with-helper\": helperText\r\n  });\r\n\r\n  return (\r\n    <div className={itemClassName}>\r\n      {renderWrapper(children, renderHelper())}\r\n    </div>\r\n  );\r\n}\r\n\r\nFormItem.propTypes = propTypes;\r\nFormItem.defaultProps = defaultProps;\r\n\r\nexport default FormItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport FormItem from \"./FormItem\";\r\nconst propTypes = {\r\n  className: PropTypes.string,\r\n  onSubmit: PropTypes.func,\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nconst defaultProps = {\r\n  className: \"\"\r\n};\r\nfunction Form(props) {\r\n  const { children, className, ...otherProps } = props;\r\n  const formClassName = classNames(\"form\", className);\r\n  return (\r\n    <form {...otherProps} className={formClassName}>\r\n      {children}\r\n    </form>\r\n  );\r\n}\r\n\r\nForm.propTypes = propTypes;\r\nForm.defaultProps = defaultProps;\r\nForm.FormItem = FormItem;\r\nexport default Form;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\n\r\nconst propTypes = {\r\n  containerClassName: PropTypes.string,\r\n  disabled: PropTypes.bool,\r\n  id: PropTypes.string,\r\n  inputClassName: PropTypes.string,\r\n  label: PropTypes.string,\r\n  labelClassName: PropTypes.string,\r\n  name: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  required: PropTypes.bool,\r\n  type: PropTypes.oneOf([\"text\", \"number\", \"tel\", \"email\"]),\r\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  onBlur: PropTypes.func,\r\n  onChange: PropTypes.func,\r\n  onFocus: PropTypes.func\r\n};\r\n\r\nconst defaultProps = {\r\n  type: \"text\",\r\n  containerClassName: \"\",\r\n  labelClassName: \"\",\r\n  inputClassName: \"\"\r\n};\r\nfunction Input(props) {\r\n  const { id, label } = props;\r\n\r\n  let {\r\n    containerClassName,\r\n    labelClassName,\r\n    inputClassName,\r\n    ...inputProps\r\n  } = props;\r\n\r\n  containerClassName = classNames(\"form-input__wrapper\", containerClassName);\r\n  labelClassName = classNames(\"form-input__label\", labelClassName);\r\n  inputClassName = classNames(\"form-input\", inputClassName);\r\n\r\n  return (\r\n    <div className={containerClassName}>\r\n      {label && (\r\n        <label htmlFor={id} className={labelClassName}>\r\n          {label}\r\n        </label>\r\n      )}\r\n      <input {...inputProps} className={inputClassName} />\r\n    </div>\r\n  );\r\n}\r\n\r\nInput.propTypes = propTypes;\r\nInput.defaultProps = defaultProps;\r\n\r\nexport default Input;\r\n","export function validateMobile(custMobile, optional) {\r\n  const reMobile = /^[6789]\\d{9}$/;\r\n  if (custMobile === \"\") {\r\n    if (!optional) {\r\n      return {\r\n        isValid: false,\r\n        errMessage: \"Please enter your mobile number\"\r\n      };\r\n    } else {\r\n      return {\r\n        isValid: true,\r\n        errMessage: \"\"\r\n      };\r\n    }\r\n  } else if (custMobile.length !== 10) {\r\n    return {\r\n      isValid: false,\r\n      errMessage: \"Mobile number should be of 10 digits\"\r\n    };\r\n  } else if (!reMobile.test(custMobile)) {\r\n    return {\r\n      isValid: false,\r\n      errMessage: \"Please provide a valid 10 digit Mobile number\"\r\n    };\r\n  } else\r\n    return {\r\n      isValid: true,\r\n      errMessage: \"\"\r\n    };\r\n}\r\n\r\nexport function validateEmail(custEmail, optional) {\r\n  const reEmail = /^[a-z0-9._%+-]+@[a-z-]{2,}\\.[a-z]{2,}(\\.[a-z]{1,}|$)$/;\r\n  custEmail = custEmail.toLowerCase();\r\n  if (custEmail === \"\") {\r\n    if (!optional) {\r\n      return {\r\n        isValid: false,\r\n        errMessage: \"Please enter your email\"\r\n      };\r\n    } else {\r\n      return {\r\n        isValid: true,\r\n        errMessage: \"\"\r\n      };\r\n    }\r\n  } else if (!reEmail.test(custEmail)) {\r\n    return {\r\n      isValid: false,\r\n      errMessage: \"Please enter valid email\"\r\n    };\r\n  } else\r\n    return {\r\n      isValid: true,\r\n      errMessage: \"\"\r\n    };\r\n}\r\n\r\nexport function validateAge(custAge, optional) {\r\n  const reAge = /^[1-9]{1}[0-9]{0,1}$/;\r\n  if (custAge === \"\") {\r\n    if (!optional) {\r\n      return {\r\n        isValid: false,\r\n        errMessage: \"Please enter your age\"\r\n      };\r\n    } else {\r\n      return {\r\n        isValid: true,\r\n        errMessage: \"\"\r\n      };\r\n    }\r\n  } else if (!reAge.test(custAge)) {\r\n    return {\r\n      isValid: false,\r\n      errMessage: \"Please enter valid age\"\r\n    };\r\n  } else\r\n    return {\r\n      isValid: true,\r\n      errMessage: \"\"\r\n    };\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport Form from \"./Form\";\r\nimport Input from \"./Input\";\r\nimport { validateEmail, validateMobile, validateAge } from \"../validation\";\r\n\r\nfunction FormManagement(props) {\r\n  const [validation, setValidaton] = useState({\r\n    email: {\r\n      isValid: true,\r\n      errMessage: \"\"\r\n    },\r\n    mobile: {\r\n      isValid: true,\r\n      errMessage: \"\"\r\n    },\r\n    age: {\r\n      isValid: true,\r\n      errMessage: \"\"\r\n    }\r\n  });\r\n\r\n  const [inputValue, setInputValue] = useState({\r\n    email: \"\",\r\n    mobile: \"\",\r\n    age: \"\"\r\n  });\r\n\r\n  const [isSubmit, setSubmit] = useState(false);\r\n\r\n  const handleFormSubmit = event => {\r\n    event.preventDefault();\r\n    const email = validateEmail(inputValue.email);\r\n    const mobile = validateMobile(inputValue.mobile);\r\n    const optionalAge =\r\n      inputValue.email.indexOf(\"gmail.com\") !== -1 ? \"\" : \"optional\";\r\n\r\n    const age = validateAge(inputValue.age, optionalAge);\r\n    handleEmailVaidation();\r\n    handleMobileValidation();\r\n    if (inputValue.email.indexOf(\"gmail.com\") !== -1) {\r\n      handleAgeValidation();\r\n    }\r\n    if (email.isValid && mobile.isValid && age.isValid) {\r\n      setSubmit(true);\r\n    } else {\r\n      setSubmit(false);\r\n    }\r\n  };\r\n  const handleChange = event => {\r\n    setSubmit(false);\r\n    const { name, value } = event.target;\r\n    setInputValue(prevState => ({ ...prevState, [name]: value }));\r\n  };\r\n\r\n  const formOutput = data => {\r\n    return Object.keys(data).map(item => {\r\n      let element = inputValue[item] ? (\r\n        <li className=\"form-data-item\" key={item}>\r\n          {item.toUpperCase()}: {inputValue[item]}\r\n        </li>\r\n      ) : (\r\n        \"\"\r\n      );\r\n      return element;\r\n    });\r\n  };\r\n\r\n  const handleEmailVaidation = event => {\r\n    const email = validateEmail(inputValue.email);\r\n    setValidaton(prevState => ({\r\n      ...prevState,\r\n      email\r\n    }));\r\n  };\r\n\r\n  const handleMobileValidation = event => {\r\n    const mobile = validateMobile(inputValue.mobile);\r\n    setValidaton(prevState => ({\r\n      ...prevState,\r\n      mobile\r\n    }));\r\n  };\r\n\r\n  const handleAgeValidation = event => {\r\n    const age = validateAge(inputValue.age);\r\n    setValidaton(prevState => ({\r\n      ...prevState,\r\n      age\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form onSubmit={handleFormSubmit}>\r\n        <Form.FormItem\r\n          validateStatus={validation.email.isValid ? \"\" : \"error\"}\r\n          helperText={validation.email.errMessage}\r\n        >\r\n          <Input\r\n            label=\"Email:\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            onChange={handleChange}\r\n            onBlur={handleEmailVaidation}\r\n          />\r\n        </Form.FormItem>\r\n        <Form.FormItem\r\n          validateStatus={validation.mobile.isValid ? \"\" : \"error\"}\r\n          helperText={validation.mobile.errMessage}\r\n        >\r\n          <Input\r\n            label=\"Mobile:\"\r\n            id=\"mobile\"\r\n            name=\"mobile\"\r\n            type=\"number\"\r\n            maxLength={10}\r\n            onChange={handleChange}\r\n            onBlur={handleMobileValidation}\r\n          />\r\n        </Form.FormItem>\r\n        {inputValue.email.indexOf(\"gmail.com\") !== -1 && (\r\n          <Form.FormItem\r\n            validateStatus={validation.age.isValid ? \"\" : \"error\"}\r\n            helperText={validation.age.errMessage}\r\n          >\r\n            <Input\r\n              label=\"Age:\"\r\n              id=\"age\"\r\n              name=\"age\"\r\n              type=\"number\"\r\n              maxLength={2}\r\n              onChange={handleChange}\r\n              onBlur={handleAgeValidation}\r\n            />\r\n          </Form.FormItem>\r\n        )}\r\n        <Form.FormItem>\r\n          <button className=\"form-submit__btn\">Submit</button>\r\n        </Form.FormItem>\r\n      </Form>\r\n      {isSubmit && (\r\n        <ul className=\"form-data__wrapper\">{formOutput(inputValue)}</ul>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FormManagement;\r\n","import React from \"react\";\r\nimport \"./stylesheet/form-management.scss\";\r\nimport FormManagement from \"./components/FormManagement\";\r\n\r\nfunction App() {\r\n  return <FormManagement />;\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./stylesheet/reset.scss\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}